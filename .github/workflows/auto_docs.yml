name: Auto Docs

on:
  workflow_call:
    inputs:
      source-branch:
        description: 'The branch to merge from'
        required: true
        type: string
      target-branch:
        description: 'The branch to merge into'
        required: true
        type: string
jobs:
  merge:
    runs-on: ubuntu-latest
    env:
      DOXYGEN_VER: 1.11.0

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: graphviz
        version: 1.0

    - name: Restore Doxygen
      id: cache-doxygen-restore
      uses: actions/cache/restore@v4
      with:
        path: /usr/local/bin/doxygen
        key: doxygen-${{ env.DOXYGEN_VER }}

    - name: Install Doxygen if not cached
      if: steps.cache-doxygen-restore.outputs.cache-hit != 'true'
      run: |
        wget "https://www.doxygen.nl/files/doxygen-$DOXYGEN_VER.linux.bin.tar.gz"
        tar -x -gz -f "doxygen-$DOXYGEN_VER.linux.bin.tar.gz"
        sudo make -C "doxygen-$DOXYGEN_VER" install
        rm -rf "doxygen-$DOXYGEN_VER"

    - name: Save Doxygen
      if: steps.cache-doxygen-restore.outputs.cache-hit != 'true'
      id: cache-doxygen-save
      uses: actions/cache/save@v4
      with:
        path: /usr/local/bin/doxygen
        key: ${{ steps.cache-doxygen-restore.outputs.cache-primary-key }}

    - name: Configure git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Fetch all branches
      run: git fetch --all

    - name: Checkout target branch
      run: git switch ${{ inputs.target-branch }}

    - name: Update & pull submodules recursively
      run: |
        git submodule update --init --recursive
        git submodule update --recursive --remote

    - name: Checkout vector
      run: |
        git checkout ${{ inputs.source-branch }} -- vector
        git diff --staged --quiet \
          || git commit -am "Bump vector version!" \
          && echo "No vector update required!"

    - name: Merge source branch into target branch
      run: git merge ${{ inputs.source-branch }} --allow-unrelated-histories --commit -X theirs

    # - NOTE: What if submodule have no docs bruch? will it fail?
    # - FIXME: We dont want to pull whole docs brunch, only tagfile (.tag)
    - name: Pull submodule docs
      run: git submodule foreach git pull --ff --allow-unrelated-histories --depth=1 origin docs

    - name: Regenerate Docs
      run: |
        rm -rf docs               # Clean docs folder
        doxygen doxygen/doxyconf  # Run doxygen with config
        touch docs/.nojekyll      # disable Jekyll framework

    - name: Commit Docs
      run: |
        git add -f docs *.tag
        git diff --staged --quiet \
          || git commit -m "AutoDocs Update" \
          && echo "No documentation changes!"

    - name: Deploy Docs
      uses: leigholiver/commit-with-deploy-key@v1.0.4
      with:
        source: .
        destination_folder: .
        destination_repo: ${{ github.repository }}
        deploy_key: ${{ secrets.AUTO_DOCS_DEPLOY_KEY }}


    # - name: Push changes to target branch
    #   env:
    #     GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_ed25519"
    #   run: git push origin ${{ inputs.target-branch }}
